From: =?utf-8?q?Andr=C3=A9_Bargull?= <andrebargull@googlemail.com>
Date: Wed, 8 Nov 2017 03:23:41 -0800
Subject: Always use the equivalent year to determine the time zone offset and
 name

Reviewed-by: Jeff Walden
Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1415202
Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1479687
Origin: upstream
Applied-upstream: 62, commit:https://hg.mozilla.org/mozilla-central/rev/ce9f1466ec78
---
 js/src/jsdate.cpp  | 12 ++++++++----
 js/src/vm/Time.cpp | 14 ++++----------
 js/src/vm/Time.h   |  2 +-
 3 files changed, 13 insertions(+), 15 deletions(-)

diff --git a/js/src/jsdate.cpp b/js/src/jsdate.cpp
index b7f49e7..f32a853 100644
--- a/js/src/jsdate.cpp
+++ b/js/src/jsdate.cpp
@@ -2684,12 +2684,16 @@ static size_t
 FormatTime(char* buf, int buflen, const char* fmt, double utcTime, double localTime)
 {
     PRMJTime prtm = ToPRMJTime(localTime, utcTime);
-    int eqivalentYear = IsRepresentableAsTime32(utcTime)
-                        ? prtm.tm_year
-                        : EquivalentYearForDST(prtm.tm_year);
+
+    // If an equivalent year was used to compute the date/time components, use
+    // the same equivalent year to determine the time zone name and offset in
+    // PRMJ_FormatTime(...).
+    int timeZoneYear = IsRepresentableAsTime32(utcTime)
+                       ? prtm.tm_year
+                       : EquivalentYearForDST(prtm.tm_year);
     int offsetInSeconds = (int) floor((localTime - utcTime) / msPerSecond);
 
-    return PRMJ_FormatTime(buf, buflen, fmt, &prtm, eqivalentYear, offsetInSeconds);
+    return PRMJ_FormatTime(buf, buflen, fmt, &prtm, timeZoneYear, offsetInSeconds);
 }
 
 enum class FormatSpec {
diff --git a/js/src/vm/Time.cpp b/js/src/vm/Time.cpp
index da690fe..3a80d7f 100644
--- a/js/src/vm/Time.cpp
+++ b/js/src/vm/Time.cpp
@@ -262,7 +262,7 @@ PRMJ_InvalidParameterHandler(const wchar_t* expression,
 /* Format a time value into a buffer. Same semantics as strftime() */
 size_t
 PRMJ_FormatTime(char* buf, int buflen, const char* fmt, const PRMJTime* prtm,
-                int equivalentYear, int offsetInSeconds)
+                int timeZoneYear, int offsetInSeconds)
 {
     size_t result = 0;
 #if defined(XP_UNIX) || defined(XP_WIN)
@@ -295,7 +295,8 @@ PRMJ_FormatTime(char* buf, int buflen, const char* fmt, const PRMJTime* prtm,
          * Fill out |td| to the time represented by |prtm|, leaving the
          * timezone fields zeroed out. localtime_r will then fill in the
          * timezone fields for that local time according to the system's
-         * timezone parameters.
+         * timezone parameters. Use |timeZoneYear| for the year to ensure the
+         * time zone name matches the time zone offset used by the caller.
          */
         struct tm td;
         memset(&td, 0, sizeof(td));
@@ -305,19 +306,12 @@ PRMJ_FormatTime(char* buf, int buflen, const char* fmt, const PRMJTime* prtm,
         td.tm_mday = prtm->tm_mday;
         td.tm_mon = prtm->tm_mon;
         td.tm_wday = prtm->tm_wday;
-        td.tm_year = prtm->tm_year - 1900;
+        td.tm_year = timeZoneYear - 1900;
         td.tm_yday = prtm->tm_yday;
         td.tm_isdst = prtm->tm_isdst;
 
         time_t t = mktime(&td);
 
-        // If |prtm| cannot be represented in |time_t| the year is probably
-        // out of range, try again with the DST equivalent year.
-        if (t == static_cast<time_t>(-1)) {
-            td.tm_year = equivalentYear - 1900;
-            t = mktime(&td);
-        }
-
         // If either mktime or localtime_r failed, fill in the fallback time
         // zone offset |offsetInSeconds| and set the time zone identifier to
         // the empty string.
diff --git a/js/src/vm/Time.h b/js/src/vm/Time.h
index db61e89..597673b 100644
--- a/js/src/vm/Time.h
+++ b/js/src/vm/Time.h
@@ -55,7 +55,7 @@ PRMJ_NowShutdown() {}
 /* Format a time value into a buffer. Same semantics as strftime() */
 extern size_t
 PRMJ_FormatTime(char* buf, int buflen, const char* fmt, const PRMJTime* tm,
-                int equivalentYear, int offsetInSeconds);
+                int timeZoneYear, int offsetInSeconds);
 
 
 /**
